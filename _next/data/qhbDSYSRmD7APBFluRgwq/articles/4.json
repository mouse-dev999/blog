{"pageProps":{"issue":{"body":"当たり前だが、プロダクトは初めから一気に全てをリリースできるわけではない。そんなことしようとしたら一生リリースできないか、開発してるうちにマーケット的に旬を逃すか、的外れなものを作ることに時間を費やすことになる。そのため、出して徐々に追加・改善していくのが常だ。\r\n\r\nでは、何をいつリリースするか？が問題となる。このような意思決定には「基準」が必要である。基準になるのは常に「重要なこと」である。重要なこととは、「目的達成に貢献度が高いこと」である。\r\n\r\n目的達成に貢献度が高いこと、の内実は色々ある。今の自分に体系立てて語る力量も、ここでその考察をする体力もない。今回取り上げたいのは、その一例のみである。とはいえ大きな一例である。今回検討したいのは、「最低限業務を回せるか」という意思決定軸だ。\r\n\r\n何をいつリリースするか？の一形態として、「一番初めに何をリリースするか？」がある。これへの回答として、「まずは、最低限業務を回せる機能群をリリースする」という考えがあり得る。あり得るというか、大体そうだろう。そうでなければシステム利用も何もない。これは私の前職でもよく使われていた基準だし、私自身も似たようなことを多かれ少なかれ言っていた。そして何か余計というか今すぐじゃなくてもいいだろそれは、みたいな機能については「それは最低限必要というわけではないので、今回は実装しなくてよい」というようなことが語られもしていた。\r\n\r\nしかし、「最低限業務を回せる」という軸は、よく考えるとあまり良い軸ではないのだ、ということを今回は提起したい。あらかじめ断っておくが、私はこの言葉が言い表したいアイデア自体には賛同だが、「最低限業務を回せる」という言葉はそのアイデアをうまく表現できていない、ということを問題視している。別にこの表現とまったく同じものをみんなが採用しているわけではないが、似た者全部ひっくるめて「うまい言語化ではない」のだ。\r\n\r\n「最低限業務が回る」という言葉は、「欠けていたら業務が回らないような機能が存在する」というような考えが見受けられるが、そんなものはない。別にシステムがどんなもんだろうが本気出せば業務は回る。\r\n\r\n例えばここに、業務Aで絶対に使う情報を担当する項目Bが存在してないシステムがあるとする。これはたぶん、上記の「最低限業務を回せるか」という観点からすると、業務を回せないレベルだろう。しかし、本当にそうか。別に項目Bに該当する情報だけユーザーが独自にメモをして記録しておけば、業務はできる。死ぬほど不便だが、できるかできないかを文字通りで言えば、やってやれなくはないので、できると言うしかない。項目Bがその業務にとっていかに重要な情報だろうが別に事態は変わらない。そこだけ手動でどうにかすれば良いのは同じだ。これはシステムで日常的に使われる「運用で回避」「運用でカバー」と同じである。運用で回避すればどんなシステムだろうが業務は回せる。\r\n\r\n上記からわかるのは、「最低限業務が回る」というような表現は、実際には「業務ができるかどうか」を問題にしているわけではなさそう、ということである。別にやろうとすればシステムがダメでも業務は完遂できる。原理的には。\r\n\r\nでは、一体この言葉は、何を問題にしその問題に対してどのような回答を与えようとしているのか？そしてそれを正しく言い表す表現とは何か？\r\n\r\n書いてて眠くなってしまったので、いつかそのうち書く後半へ続く。","bodyHTML":"<p>当たり前だが、プロダクトは初めから一気に全てをリリースできるわけではない。そんなことしようとしたら一生リリースできないか、開発してるうちにマーケット的に旬を逃すか、的外れなものを作ることに時間を費やすことになる。そのため、出して徐々に追加・改善していくのが常だ。</p>\n<p>では、何をいつリリースするか？が問題となる。このような意思決定には「基準」が必要である。基準になるのは常に「重要なこと」である。重要なこととは、「目的達成に貢献度が高いこと」である。</p>\n<p>目的達成に貢献度が高いこと、の内実は色々ある。今の自分に体系立てて語る力量も、ここでその考察をする体力もない。今回取り上げたいのは、その一例のみである。とはいえ大きな一例である。今回検討したいのは、「最低限業務を回せるか」という意思決定軸だ。</p>\n<p>何をいつリリースするか？の一形態として、「一番初めに何をリリースするか？」がある。これへの回答として、「まずは、最低限業務を回せる機能群をリリースする」という考えがあり得る。あり得るというか、大体そうだろう。そうでなければシステム利用も何もない。これは私の前職でもよく使われていた基準だし、私自身も似たようなことを多かれ少なかれ言っていた。そして何か余計というか今すぐじゃなくてもいいだろそれは、みたいな機能については「それは最低限必要というわけではないので、今回は実装しなくてよい」というようなことが語られもしていた。</p>\n<p>しかし、「最低限業務を回せる」という軸は、よく考えるとあまり良い軸ではないのだ、ということを今回は提起したい。あらかじめ断っておくが、私はこの言葉が言い表したいアイデア自体には賛同だが、「最低限業務を回せる」という言葉はそのアイデアをうまく表現できていない、ということを問題視している。別にこの表現とまったく同じものをみんなが採用しているわけではないが、似た者全部ひっくるめて「うまい言語化ではない」のだ。</p>\n<p>「最低限業務が回る」という言葉は、「欠けていたら業務が回らないような機能が存在する」というような考えが見受けられるが、そんなものはない。別にシステムがどんなもんだろうが本気出せば業務は回る。</p>\n<p>例えばここに、業務Aで絶対に使う情報を担当する項目Bが存在してないシステムがあるとする。これはたぶん、上記の「最低限業務を回せるか」という観点からすると、業務を回せないレベルだろう。しかし、本当にそうか。別に項目Bに該当する情報だけユーザーが独自にメモをして記録しておけば、業務はできる。死ぬほど不便だが、できるかできないかを文字通りで言えば、やってやれなくはないので、できると言うしかない。項目Bがその業務にとっていかに重要な情報だろうが別に事態は変わらない。そこだけ手動でどうにかすれば良いのは同じだ。これはシステムで日常的に使われる「運用で回避」「運用でカバー」と同じである。運用で回避すればどんなシステムだろうが業務は回せる。</p>\n<p>上記からわかるのは、「最低限業務が回る」というような表現は、実際には「業務ができるかどうか」を問題にしているわけではなさそう、ということである。別にやろうとすればシステムがダメでも業務は完遂できる。原理的には。</p>\n<p>では、一体この言葉は、何を問題にしその問題に対してどのような回答を与えようとしているのか？そしてそれを正しく言い表す表現とは何か？</p>\n<p>書いてて眠くなってしまったので、いつかそのうち書く後半へ続く。</p>","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/mouse-dev999/blog/issues/4/comments","created_at":"2022-06-09T14:10:54Z","events_url":"https://api.github.com/repos/mouse-dev999/blog/issues/4/events","html_url":"https://github.com/mouse-dev999/blog/issues/4","id":1266196134,"labels":[],"labels_url":"https://api.github.com/repos/mouse-dev999/blog/issues/4/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHTPrzc5LeJ6m","number":4,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/mouse-dev999/blog/issues/4/reactions"},"repository_url":"https://api.github.com/repos/mouse-dev999/blog","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/mouse-dev999/blog/issues/4/timeline","title":"「最低限業務を回せる」（前編）","updated_at":"2022-06-09T14:10:54Z","url":"https://api.github.com/repos/mouse-dev999/blog/issues/4","user":{"avatar_url":"https://avatars.githubusercontent.com/u/104954281?v=4","events_url":"https://api.github.com/users/mouse-dev999/events{/privacy}","followers_url":"https://api.github.com/users/mouse-dev999/followers","following_url":"https://api.github.com/users/mouse-dev999/following{/other_user}","gists_url":"https://api.github.com/users/mouse-dev999/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/mouse-dev999","id":104954281,"login":"mouse-dev999","node_id":"U_kgDOBkF5qQ","organizations_url":"https://api.github.com/users/mouse-dev999/orgs","received_events_url":"https://api.github.com/users/mouse-dev999/received_events","repos_url":"https://api.github.com/users/mouse-dev999/repos","site_admin":false,"starred_url":"https://api.github.com/users/mouse-dev999/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mouse-dev999/subscriptions","type":"User","url":"https://api.github.com/users/mouse-dev999"}},"issueComments":[]},"__N_SSG":true}